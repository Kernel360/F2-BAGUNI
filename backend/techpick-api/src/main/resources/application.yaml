spring:
  profiles:
    include:
      - core

springdoc:
  swagger-ui:
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs
  show-actuator: true
  # swagger 가 패키지를 포함하여 관리하게 함 -> 같은 클래스내의 inner class 또한 구분 가능
  # ex) TagApiResponse.Create TagApiResponse.Move 를 구분할 수 있음
  use-fqn: true

---

spring:
  jwt:
    secret:
      ${JWT_SECRET}
    issuer:
      ${JWT_ISSUER}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-name: Naver
            authorization-grant-type: authorization_code
            scope:
              - email
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response

oauth2-attribute-config-provider:
  attributeConfig:
    google:
      name: "sub"
      email: "email"
    kakao:
      name: "id"
      email: "email"
    naver:
      name: "id"
      email: "email"

---

spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: http://localhost:8080/api/login/oauth2/code/google
          naver:
            redirect-uri: http://localhost:8080/api/login/oauth2/code/naver
          kakao:
            redirect-uri: http://localhost:8080/api/login/oauth2/code/kakao
security:
  cors-patterns:
    - chrome-extension://*
    - https://local.minlife.me:3000
  cookie-domain: localhost
  default-redirect-url: http://localhost:8080
  base-url: http://localhost:8080

---

spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: https://v2.minlife.me/api/login/oauth2/code/google
          naver:
            redirect-uri: https://v2.minlife.me/api/login/oauth2/code/naver
          kakao:
            redirect-uri: https://v2.minlife.me/api/login/oauth2/code/kakao
security:
  cors-patterns:
    - chrome-extension://*
    - https://*.minlife.me
    - https://local.minlife.me:3000
  cookie-domain: minlife.me
  default-redirect-url: https://app.minlife.me
  base-url: https://v2.minlife.me

---

spring:
  config:
    activate:
      on-profile: prod
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: https://api.techpick.org/api/login/oauth2/code/google
          naver:
            redirect-uri: https://api.techpick.org/api/login/oauth2/code/naver
          kakao:
            redirect-uri: https://api.techpick.org/api/login/oauth2/code/kakao
security:
  cors-patterns:
    - chrome-extension://*
    - https://*.techpick.org
  cookie-domain: techpick.org
  default-redirect-url: https://app.techpick.org
  base-url: https://api.techpick.org

# 운영 환경에서 스웨거 접근 못하도록 막는 설정
springdoc:
  swagger-ui:
    enabled: false  # false로 변경하면, swagger 접근 불가

---