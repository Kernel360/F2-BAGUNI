logging:
  level:
    org:
      springframework:
        data:
          mongodb:
            core:
#              MongoTemplate: DEBUG # MongoDB Query Logging

# swagger setting
springdoc:
  swagger-ui:
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs
  show-actuator: true
  use-fqn: true # swagger가 패키지를 포함 관리, 같은 클래스내의 inner class 또한 구분 가능. Ex) TagApiResponse.Create TagApiResponse.Move 를 구분할 수 있음

spring:
  profiles:
    include:
      - core
  application:
    name: baguni.${PROFILE_MODE}.server.ranking
  output:
    ansi:
      enabled: always
  sql:
    init:
      mode: never # schema.sql 실행시 always 키고 실행하시면 됩니다. option: never, always
---
spring:
  config:
    activate:
      on-profile: local
  data:
    mongodb:
      uri: mongodb://${DOCKER_MONGO_USERNAME}:${DOCKER_MONGO_PASSWORD}@${DOCKER_LOCAL_MONGO_URL}/${DOCKER_MONGO_DATABASE}?authSource=${DOCKER_MONGO_AUTH}
      database: ${DOCKER_MONGO_DATABASE}
      username: ${DOCKER_MONGO_USERNAME}
      password: ${DOCKER_MONGO_PASSWORD}
server:
  port: 8082
---
spring:
  config:
    activate:
      on-profile: dev
  data:
    mongodb:
      uri: mongodb://${DOCKER_MONGO_USERNAME}:${DOCKER_MONGO_PASSWORD}@${DOCKER_DEV_MONGO_URL}/${DOCKER_MONGO_DATABASE}?authSource=${DOCKER_MONGO_AUTH}
      database: ${DOCKER_MONGO_DATABASE}
      username: ${DOCKER_MONGO_USERNAME}
      password: ${DOCKER_MONGO_PASSWORD}
server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: prod
  data:
    mongodb:
      uri: mongodb://${DOCKER_MONGO_USERNAME}:${DOCKER_MONGO_PASSWORD}@${DOCKER_PROD_MONGO_URL}/${DOCKER_MONGO_DATABASE}?authSource=${DOCKER_MONGO_AUTH}
      database: ${DOCKER_MONGO_DATABASE}
      username: ${DOCKER_MONGO_USERNAME}
      password: ${DOCKER_MONGO_PASSWORD}
server:
  port: 8080
---