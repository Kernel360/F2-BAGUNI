spring:
  profiles:
    include:
      - domain
      - common
  application:
    name: baguni.${PROFILE_MODE}.server.api
springdoc:
  swagger-ui:
#    path: /swagger-custom.html # swagger-ui 접근 경로, 외부에서 쉽게 접근하지 못하게 하려면 변경
    groups-order: DESC # 각 API의 그룹 표시 순서 (springdoc.swagger-ui.urls에 정의된 부분만 정렬)

    # alpha: 알파벳 순 정렬
    # method: OpenAPI specification file에 선언한 태그 순서대로 정렬
    tags-sorter: alpha # 태그 정렬 순서

    # method: delete - get - patch - post - put 순으로 정렬
    # alpha: 알파벳 순으로 정렬
    operations-sorter: method # 컨트롤러 정렬 순서
    disable-swagger-default-url: true
  api-docs:
    path: /api-docs
  show-actuator: true
  use-fqn: true # swagger가 패키지를 포함 관리, 같은 클래스내의 inner class 또한 구분 가능. Ex) TagApiResponse.Create TagApiResponse.Move 를 구분할 수 있음
#logging: # /* Transaction Logging */
#  level:
#    org.springframework.orm.jpa: DEBUG
---
spring:
  jwt:
    secret: ${JWT_SECRET}
    issuer: ${JWT_ISSUER}
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-name: Kakao
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            scope:
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
oauth2-attribute-config-provider:
  attributeConfig:
    google:
      name: "sub" # use `sub` attribute as name
      email: "email"
    kakao:
      name: "id" # use `id` attribute as name
      email: "email"
---
spring:
  config:
    activate:
      on-profile: local
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: http://localhost:8080/api/login/oauth2/code/google
          kakao:
            redirect-uri: http://localhost:8080/api/login/oauth2/code/kakao
security:
  cors-patterns:
    - chrome-extension://*
    - https://local.minlife.me:3000
  cookie-domain: localhost
  default-redirect-url: http://localhost:8080/swagger-ui/index.html
  base-url: http://localhost:8080
server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: dev
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: https://v2.minlife.me/api/login/oauth2/code/google
          kakao:
            redirect-uri: https://v2.minlife.me/api/login/oauth2/code/kakao
security:
  cors-patterns:
    - chrome-extension://*
    - https://*.minlife.me
    - https://local.minlife.me:3000
  cookie-domain: minlife.me
  default-redirect-url: https://app.minlife.me
  base-url: https://v2.minlife.me
server:
  port: 8080
---
spring:
  config:
    activate:
      on-profile: prod
  security:
    oauth2:
      client:
        registration:
          google:
            redirect-uri: https://api.baguni.kr/api/login/oauth2/code/google
          kakao:
            redirect-uri: https://api.baguni.kr/api/login/oauth2/code/kakao
security:
  cors-patterns:
    - chrome-extension://*
    - https://*.baguni.kr
  cookie-domain: baguni.kr
  default-redirect-url: https://app.baguni.kr
  base-url: https://api.baguni.kr
springdoc: # 운영 환경에서 스웨거 접근 못하도록 막는 설정
  api-docs:
    enabled: false # false로 변경하면, swagger api-docs(정적 json 파일) 접근 불가
  swagger-ui:
    enabled: false # false로 변경하면, swagger 접근 불가
server:
  port: 8080
---