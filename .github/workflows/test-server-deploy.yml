
# Reference
#  - (1) https://docs.docker.com/build/ci/github-actions/#examples
#  - (2) https://github.com/Kernel360/E2E2-LOOK-US/blob/deploy/.github/workflows/deploy.yml

name: Tech-pick Testing Server Deploy

on:
  push:
    branches:
#      - "backend"
      - "deploy-test"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      -
        # 저장소 Checkout
        name: Checkout source code
        uses: actions/checkout@v4
      -
        # Gradle 실행 권한 부여
        name: Grant execute permission to gradlew
        run: chmod +x ./backend/gradlew
      -
        # JDK 설치
        name: Set up JDK corretto:17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      -
        # 환경 변수 설정 (.env)
        name: Set environment values
        run: |
          cd ./backend/src/main/resources
          touch ./env.properties
          echo "${{ secrets.ENV }}" > ./env.properties
        shell: bash
      -
        # Spring boot application 빌드
        name: Build with gradle
        run: |
          cd ./backend
          ./gradlew clean build -x test
      -
        # Docker image 빌드
        name: Build docker image
        run: |
          cd ./backend
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/techpick:${{ github.sha }} .
      -
        # Docker hub 로그인
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        # Docker hub 업로드
        name: Publish to docker hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/techpick:${{ github.sha }}
      -
        # 서버 ssh 접속 후 방금 올린 이미지 pull 받고 실행
        name: Deploy on Test-Server
        uses: appleboy/ssh-action@master
        with:
          host: minlife.me # test home server
          port: 4242
          username: root # root user
          password: ${{ secrets.SSH_TEST_SERVER_KYEU_PASSWORD }}
          script: |
            
            echo "login docker hub for private repository access ..."
            echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
            
            echo "docker - pulling..."
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/techpick:${{ github.sha }}

            echo "docker - changing image name and tag ..."
            docker tag ${{ secrets.DOCKERHUB_USERNAME }}/techpick:${{ github.sha }} techpick:staging
            
            cd /home/project/techpick
            
            echo "create .env file with github repository's ENV setting ..."
            touch .env
            echo "${{ secrets.ENV }}" > .env
            
            docker-compose down
            docker compose up -d
            
            echo "docker - pruning images that passed 24h ..."
            docker image prune -af --filter "until=24h"
