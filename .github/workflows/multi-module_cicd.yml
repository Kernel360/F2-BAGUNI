name: Tech-pick Multi-Module CI/CD

on:
  push:
    branches:
      - "backend-v2" # 배포 대상 브랜치
    paths:
      - 'techpick-api/**'     # techpick-api 모듈 변경 시 트리거
      - 'techpick-batch/**'   # techpick-batch 모듈 변경 시 트리거

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      api-version: 'v2'

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Determine Changed Modules
        id: determine-modules
        run: |
          if git diff --name-only HEAD^ HEAD | grep -q "^techpick-api/"; then
            echo "techpick-api" >> changed_modules.txt
          fi
          if git diff --name-only HEAD^ HEAD | grep -q "^techpick-batch/"; then
            echo "techpick-batch" >> changed_modules.txt
          fi

      - name: Build and Deploy Modules
        if: always()
        run: |
          if grep -q "techpick-api" changed_modules.txt; then
            echo "Building and deploying techpick-api..."
            cd techpick-api
            ./gradlew clean build -x test
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/techpick-api:${{ env.api-version }}-${{ github.sha }} .
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/techpick-api:${{ env.api-version }}-${{ github.sha }}
            cd ..
          fi
          if grep -q "techpick-batch" changed_modules.txt; then
            echo "Building and deploying techpick-batch..."
            cd techpick-batch
            ./gradlew clean build -x test
            docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/techpick-batch:${{ env.api-version }}-${{ github.sha }} .
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/techpick-batch:${{ env.api-version }}-${{ github.sha }}
            cd ..
          fi

      - name: Deploy on Test-Server
        uses: appleboy/ssh-action@master
        with:
          host: minlife.me
          port: 4242
          username: root
          password: ${{ secrets.SSH_TEST_SERVER_KYEU_PASSWORD }}
          script: |
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/techpick-api:${{ env.api-version }}-${{ github.sha }}
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/techpick-batch:${{ env.api-version }}-${{ github.sha }}
            docker-compose down
            docker-compose up -d
            docker image prune -af --filter "until=24h"

      - name: Discord Webhook Notification
        uses: sarisia/actions-status-discord@v1.14.7
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          status: ${{ job.status }}
          title: "TechPick ${{ env.api-version }} Deployment Result"
          description: "배포가 완료되었습니다."
          color: 0xff91a4
          url: "https://github.com/sarisia/actions-status-discord"
          username: GitHub Actions
